;; ----------------------------------------------------------------------------
;; Variables
;; ----------------------------------------------------------------------------
(deflisten window :initial "NixOS" "bash ~/.config/eww/scripts/get-window-title")
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace")


;; ----------------------------------------------------------------------------
;; Widgets
;; ----------------------------------------------------------------------------
(defwidget left_box []
    (box :class "left_box"
         :orientation "horizontal"
         :space-evenly false
         :halign "start"
    (nixos_logo)
    (workspaces)))

(defwidget center_box []
    (box :class "center_box"
         :orientation "horizontal"
         :space-evenly false
         :halign "center"
    (window_title)))

(defwidget right_box []
    (box :class "right_box"
         :orientation "horizontal"
         :space-evenly false
         :halign "end"
    (label :text ""))) ;; TODO: define the right widgets

(defwidget eww_bar []
    (box :class "eww_bar"
         :orientation "horizontal"
    (left_box)
    (center_box)
    (right_box)))

(defwidget nixos_logo []
    (box :class "nixos_logo"
         :space-evenly false
        (image :path "${EWW_CONFIG_DIR}/nixos.png"
               :image-width 24
               :image-height 24)))

(defwidget workspaces []
        (box :space-evenly true
            (label :text "${workspaces}${current_workspace}" :visible false)
            (for workspace in workspaces
                (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                    (box :class "workspaces ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                        (label :text "${workspace.id == current_workspace ? "" : ""}"))))))

(defwidget window_title []
    (box :class "window_title"
         :space-evenly false
        (label :text "${window}"
               :limit-width 50)))


;; ----------------------------------------------------------------------------
;; EWW
;; ----------------------------------------------------------------------------
(defwindow bar
    :monitor 0
    :windowtype "dock"
    :stacking "bg"
    :exclusive true
    :geometry (geometry :x "0%"
                        :y "10px"
                        :width "99%"
                        :height "30px"
                        :anchor "top center")
    :reserve (struts :side "top" :distance "4%")
    (eww_bar))
