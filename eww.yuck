;; ----------------------------------------------------------------------------
;; variables
;; ----------------------------------------------------------------------------
(defvar eww-bin "/home/gabriel/.nix-profile/bin/eww")
(defvar rev false)

(deflisten window :initial "NixOS" "bash ~/.config/eww/scripts/get-window-title.sh")
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/get-workspaces.sh")
(deflisten current_workspace :initial "1" "bash ~/.config/eww/scripts/get-active-workspace.sh")

(defpoll time :interval "60s" "date '+%I:%M %p'")
(defpoll date :interval "60s" "date '+%a %b %d'")


;; ----------------------------------------------------------------------------
;; base structures for widgets
;; ----------------------------------------------------------------------------
;; left modules
(defwidget left_box []
    (box :class "left_box"
         :orientation "horizontal"
         :space-evenly false
         :halign "start"
    (nixos_logo)
    (workspaces)))

;; center modules
(defwidget center_box []
    (box :class "center_box"
         :orientation "horizontal"
         :space-evenly false
         :halign "center"
    (window_title)))

;; right modules
(defwidget right_box []
    (box :class "right_box"
         :orientation "horizontal"
         :space-evenly false
         :halign "end"
    (datetime)))

;; eww bar
(defwidget eww_bar []
    (box :class "eww_bar"
         :orientation "horizontal"
    (left_box)
    (center_box)
    (right_box)))


;; ----------------------------------------------------------------------------
;; widgets
;; ----------------------------------------------------------------------------
;; image box with a image
(defwidget nixos_logo []
    (box :class "nixos_logo"
         :space-evenly false
        (image :path "${EWW_CONFIG_DIR}/assets/nixos.png"
               :image-width 24
               :image-height 24)))

;; hyprland workspaces
(defwidget workspaces []
        (box :space-evenly true
            (label :text "${workspaces}${current_workspace}" :visible false)
            (for workspace in workspaces
                (eventbox :onclick "hyprctl dispatch workspace ${workspace.id}"
                    (box :class "workspaces ${workspace.id == current_workspace ? "current" : ""} ${workspace.windows > 0 ? "occupied" : "empty"}"
                        (label :text "${workspace.id == current_workspace ? "" : ""}"))))))

;; hyprland window title
(defwidget window_title []
    (box :class "window_title"
         :space-evenly false
        (label :text "${window}"
               :limit-width 50)))

;; date/clock widget
(defwidget datetime []
    (eventbox :onhover "${eww-bin} update rev=true"
              :onhoverlost "${eww-bin} update rev=false"
              :cursor "pointer"
        (box :class "datetime"
             :orientation "horizontal"
             :space-evenly false
             :spacing "3"
            (label :class "time"
                   :text "${time}")
                (revealer :transition "slideleft"
                          :reveal rev
                          (button :class "date"
                                  :onclick "${EWW_CONFIG_DIR}/scripts/calendar.sh" "${date}")))))

;; calendar widget
(defwidget cal []
    (box :orientation "vertical"
         :class "calendar"
         (calendar :class "calendar_in"
                   :day "date '+%d'"
                   :month "date '+%m'"
                   :year "date '+%Y'")))

;; calendar window
(defwindow calendar
    :monitor 0
    :windowtype "dock"
    :stacking "fg"
    :exclusive true
    :geometry (geometry :x "10px"
                        :y "5px"
                        :width "270px"
                        :height "60px"
                        :anchor "top right")
    (cal))


;; ----------------------------------------------------------------------------
;; main window
;; ----------------------------------------------------------------------------
(defwindow bar
    :monitor 0
    :windowtype "dock"
    :stacking "bg"
    :exclusive true
    :geometry (geometry :x "0%"
                        :y "10px"
                        :width "99%"
                        :height "30px"
                        :anchor "top center")
    :reserve (struts :side "top" :distance "4%")
    (eww_bar))
